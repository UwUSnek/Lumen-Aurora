#version 450

#define gx gl_GlobalInvocationID.x	//The x coordinate of the shader call. This does not depend on the workgroup size
#define gy gl_GlobalInvocationID.y	//The y coordinate of the shader call. This does not depend on the workgroup size




layout (local_size_x = 1, local_size_y = 1, local_size_z = 1 ) in;

layout(std430, binding = 0) buffer colorOutput_{ vec4 colorOutput[]; };
layout(std430, binding = 1) buffer windowSize_{ uint width; uint height; };
layout(std430, binding = 2) buffer zBuffer_{ uint zBuffer[]; };
layout(std430, binding = 3) buffer objData_{
	//16
	ivec2 fp;	 //0
	ivec2 sp;	 //8
	//4
	uint ID;	 //16
};







void setPixelColor(vec2 pos, vec4 col){
	uint i = uint(pos.y) * width + uint(pos.x);

	//TODO use ordered render and component cache
//	if(zBuffer[i] <= ID){
//	zBuffer[i] = ID;
		colorOutput[i] = col;
//	}
}




void main() {
		colorOutput[1] = vec4(0,1,0,1);
//	for(int i=fp.x; i < sp.x; i++){
//		for(int j=fp.y; j < sp.y; j++){
//			setPixelColor(vec2(i,j),vec4(0,1,0,1));
//		}
//	}
}
