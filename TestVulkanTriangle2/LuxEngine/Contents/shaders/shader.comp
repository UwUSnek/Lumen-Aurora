
#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WIDTH 1920
#define HEIGHT 1080
#define WORKGROUP_SIZE 32






layout (local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 1 ) in;


layout(std430, binding = 0) buffer buf{
	uint imageData[];
};



void main() {
	//X and y are inverted since rendering goes from top to bottom and from left to right
//	uint y = (gl_GlobalInvocationID.x*WORKGROUP_SIZE+gl_LocalInvocationID.x) % HEIGHT;
//	uint x = (gl_GlobalInvocationID.x*WORKGROUP_SIZE+gl_LocalInvocationID.x) / HEIGHT; 
	//TODO yeet unnecessary threads

	uvec4 color = (gl_GlobalInvocationID.x > 20) ? uvec4(gl_GlobalInvocationID.x/9,0,0,255) : uvec4(0, 0, 255, 255);			

	// store the rendered mandelbrot set into a storage buffer:
	imageData[gl_GlobalInvocationID.y*WIDTH + gl_GlobalInvocationID.x] = ((color.a & 0xFF) << 24) | ((color.b & 0xFF) << 16) | ((color.g & 0xFF) << 8) | ((color.r & 0xFF) << 0);
}