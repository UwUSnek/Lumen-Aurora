
//####################################################################################
// This file was generated by Tools/Build/GenInitializer
// Changes could be overwritten without notice
// !Do not include or compile this file
//####################################################################################
#include "Lynx/Core/Init.hpp"



namespace lnx::thr::_pvt {
    extern bool _lnx_init_var_threads_is_init; //!Zero initialized
    used        RtArray<Thread, uint32>* _lnx_init_var_threads_get();
    extern      RtArray<Thread, uint32>* _lnx_init_var_threads_v;

    struct _lnx_init_var_threads_init_t_call_t{
        _lnx_init_var_threads_init_t_call_t(){
            if(!_lnx_init_var_threads_is_init) _lnx_init_var_threads_v = _lnx_init_var_threads_get();
        }
    };
    used static _lnx_init_var_threads_init_t_call_t _lnx_init_var_threads_init_t_call_v;
}

namespace lnx::thr::_pvt {
    extern bool _lnx_init_var_queue_is_init; //!Zero initialized
    used        std::deque<ram::ptr<_pvt::Func_b>>* _lnx_init_var_queue_get();
    extern      std::deque<ram::ptr<_pvt::Func_b>>* _lnx_init_var_queue_v;

    struct _lnx_init_var_queue_init_t_call_t{
        _lnx_init_var_queue_init_t_call_t(){
            if(!_lnx_init_var_queue_is_init) _lnx_init_var_queue_v = _lnx_init_var_queue_get();
        }
    };
    used static _lnx_init_var_queue_init_t_call_t _lnx_init_var_queue_init_t_call_v;
}

namespace lnx::thr::_pvt {
    extern bool _lnx_init_var_queue_m_is_init; //!Zero initialized
    used        std::mutex* _lnx_init_var_queue_m_get();
    extern      std::mutex* _lnx_init_var_queue_m_v;

    struct _lnx_init_var_queue_m_init_t_call_t{
        _lnx_init_var_queue_m_init_t_call_t(){
            if(!_lnx_init_var_queue_m_is_init) _lnx_init_var_queue_m_v = _lnx_init_var_queue_m_get();
        }
    };
    used static _lnx_init_var_queue_m_init_t_call_t _lnx_init_var_queue_m_init_t_call_v;
}

namespace lnx::thr::_pvt{
    struct _lnx_init_fun_LNX_H_THREAD_POOL_FUN_t;
}

namespace lnx::thr::_pvt {
    extern bool _lnx_init_var_LNX_H_THREAD_POOL_FUN_is_init; //!Zero initialized
    used        _pvt::_lnx_init_fun_LNX_H_THREAD_POOL_FUN_t* _lnx_init_var_LNX_H_THREAD_POOL_FUN_get();
    extern      _pvt::_lnx_init_fun_LNX_H_THREAD_POOL_FUN_t* _lnx_init_var_LNX_H_THREAD_POOL_FUN_v;

    struct _lnx_init_var_LNX_H_THREAD_POOL_FUN_init_t_call_t{
        _lnx_init_var_LNX_H_THREAD_POOL_FUN_init_t_call_t(){
            if(!_lnx_init_var_LNX_H_THREAD_POOL_FUN_is_init) _lnx_init_var_LNX_H_THREAD_POOL_FUN_v = _lnx_init_var_LNX_H_THREAD_POOL_FUN_get();
        }
    };
    used static _lnx_init_var_LNX_H_THREAD_POOL_FUN_init_t_call_t _lnx_init_var_LNX_H_THREAD_POOL_FUN_init_t_call_v;
}