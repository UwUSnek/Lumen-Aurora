

#include <src/Lynx/shaders/stdlib.ilsh>

#define gx gl_GlobalInvocationID.x
#define gy gl_GlobalInvocationID.y
#define g gl_GlobalInvocationID



//
// layout (local_size_x = 32, local_size_y = 1, local_size_z = 1 ) in;\
a



void setPixel(f32v2 pos, f32v4 col) {
	//TODO REMOVE -- test
	if(pos.x == 0){ pos.y = 1; }
	elif(pos.x == 1) { pos.y = 2; }
	else { pos.y = 3; }
	//TODO REMOVE -- test


	// u32 i = u32(pos.y) * wsize.x + u32(pos.x); //FIXME add asignment in declaration
	u32 i;
	i = u32(pos.y) * wsize.x + u32(pos.x);

	outcol[i] = col;
}

void main(extern f32v4 outcol[], extern u32v2 wsize, local f32v3 pos, local f32 r, local f32v4 col) {
	for(i32 idk = 0; idk < 3; idk++){
		//something
	}
	/*multiline
		comment */

	/*multiline comment in one line*/

	//single line comment
	0x3

	setPixel(f32v2(1, 1), f32v4(250, 0, 0, 250));
	setPixel(f32v2(1, 1), f32v4(1, 0, 0, 1));

	setPixel(f32v2(0.5, 0.5), f32v4(250, 0, 0, 250));
	setPixel(f32v2(0.5, 0.5), f32v4(1, 0, 0, 1)); //a
	//a
	setPixel(f32v2(0, 0), f32v4(250, 0, 0, 250));
	setPixel(f32v2(0, 0), f32v4(1, 0, 0, 1));
}
