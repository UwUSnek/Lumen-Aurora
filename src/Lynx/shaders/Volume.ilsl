

#include <src/Lynx/shaders/stdlib.ilsh>

#define gx gl_GlobalInvocationID.x
#define gy gl_GlobalInvocationID.y
#define g gl_GlobalInvocationID


u32 f;
bv4 f2 = f + 2;
/*struct s{
	i32 a;
	f32 b;
};*/


bv4 f3; /*struct s22{ f32m3x4 sdadewrdfew;
	f32 b;};*/
//
// layout (local_size_x = 32, local_size_y = 1, local_size_z = 1 ) in;



void setPixel(f32v2 pos, f32v4 col) {
	//TODO REMOVE -- test
	if(pos.x == 0){ pos.y = 1; } //FIXME this expression is skipped
	else {
		if(pos.x == 1) { pos.y = 2; }
		else { pos.y = 3; }
	}

	i32 i; i32 j;
	for(i = 0; i < 14; ++i){
		col.y = i + 4;

		while(j < 4){
			j += 2;
			func(45 + j, i);
		}
		then {
			func(0);
		}
		else {
			if(1){
				for(n = 0; i; ++n){}
				for(; i; ++n){}
				for(n = 0; i;){}
				for(; i;){}
			}
		}
	}
	while(j < 4){
		j += 2;
		func2(~j+!j+j-j*j);
	}
	//TODO REMOVE -- test


	// u32 i = u32(pos.y) * wsize.x + u32(pos.x); //FIXME add asignment in declaration
	u32 i; //FIXME this should be a redefinition error
	// i = u32(pos.y) * wsize.x + u32(pos.x);
	i = pos.y * wsize.x + pos.x;

	outcol[i] = col;
}

void main(extern f32v4 outcol[], extern u32v2 wsize, local f32v3 pos, local f32 r, local f32v4 col) {
	i32 idk;
	for(idk = 0; idk < 3; idk++){
		//something
	}
	/*multiline
		comment */

	/*multiline comment in one line*/

	//single line comment
	0x3;

	// setPixel(f32v2(1, 1), f32v4(250, 0, 0, 250));
	// setPixel(f32v2(1, 1), f32v4(1, 0, 0, 1));

	// setPixel(f32v2(0.5, 0.5), f32v4(250, 0, 0, 250));
	// setPixel(f32v2(0.5, 0.5), f32v4(1, 0, 0, 1)); //a
	// //a
	// setPixel(f32v2(0, 0), f32v4(250, 0, 0, 250));
	// setPixel(f32v2(0, 0), f32v4(1, 0, 0, 1));
	setPixel(1, 1, 250, 0, 0, 250);
	setPixel(1, 1, 1, 0, 0, 1);

	setPixel(0.5, 0.5, 250, 0, 0, 250);
	setPixel(0.5, 0.5, 1, 0, 0, 1); //a
	//a
	setPixel(0, 0, 250, 0, 0, 250);
	setPixel(0, 0, 1, 0, 0, 1);
}
