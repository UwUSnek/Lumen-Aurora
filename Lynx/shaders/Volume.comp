#version 450
#define gx gl_GlobalInvocationID.x
#define gy gl_GlobalInvocationID.y
#define g gl_GlobalInvocationID

//TODO ##################################################
//TODO DOUBLES AND DOUBLE VECTORS ARE NOT SUPPORTED     #
//TODO ##################################################


struct Point{
	vec3 pos;  	//position
	float r;   	//radius
	vec4 col;  	//color
};



layout (local_size_x = 32, local_size_y = 1, local_size_z = 1 ) in;

layout(std430, binding = 0) buffer ext_outcol{
	vec4 outcol[];
	int TEST;
};
layout(std430, binding = 1) buffer ext_wsize{ uvec2 wsize; };
layout(std140, binding = 2) uniform _data{
	// Point points;
		vec3 pos;  	//position
	float r;   	//radius
	vec4 col;  	//color

};





void setPixel(vec2 pos, vec4 col) {
	uint i = uint(pos.y) * wsize.x + uint(pos.x);
	outcol[i] = col;
}


void main() {
	setPixel(vec2(1, 1), vec4(250, 0, 0, 250));
	setPixel(vec2(1, 1), vec4(1, 0, 0, 1));

	setPixel(vec2(0.5, 0.5), vec4(250, 0, 0, 250));
	setPixel(vec2(0.5, 0.5), vec4(1, 0, 0, 1));

	setPixel(vec2(0, 0), vec4(250, 0, 0, 250));
	setPixel(vec2(0, 0), vec4(1, 0, 0, 1));
	// setPixel(pos.xy );
}
