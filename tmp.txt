


Syntax: <option> <path/to/file>
-o                              Outputs executable       [ Default file path: <source>.bin  ]
--output-syntax                 Outputs syntactic tree   [ Default file path: <source>.txt  ]
--output-semantic               Outputs semantic tree    [ Default file path: <source>.txt  ]
--output-1                      Outputs Layer 1          [ Default file path: <source>.txt  ]
--output-0                      Outputs Layer 0          [ Default file path: <source>.txt  ]
--output-glsl                   Outputs GLSL code        [ Default file path: <source>.comp ]
--output-cpp                    Outputs C++ code         [ Default file path: <source>.cpp  ]
--output-asm                    Outputs Assembly code    [ Default file path: <source>.asm  ]




Syntax: <option>
-O0                             No optimizations
-O1                             Equivalent to //TODO
-O2                             Equivalent to //TODO
-O3                             Equivalent to --o-rewrite --o-values
-Of                             Complete optimization. Includes standard modules and context dependant optimizations. Requires -f

--o-rewrite                     Rewrites inefficient functions
--o-values                      Replaces compile time values with literals or constants
--o-unused-functions            Removes unused functions
--o-unused-vvalues              Removes unused values




Syntax: <option>
-g0                             No debug informations
-g1                             Equivalent to //TODO
-g2                             Equivalent to //TODO
-g3                             Equivalent to //TODO

--g-//TODO




Syntax: <option>
-f                              Full build. All the source files are preprocessed and compiled, including the core module and the standard modules
--max-iterations-optimization   Maximum number of iterations for compile time optimizations         [ Default value: 16777216 ]
--max-iterations-value          Maximum number of iterations for compile time values definition     [ Default value: 16777216 ]
--max-depth-optimization        Maximum function depth for compilt time optimizations               [ Default value: 16777216 ]
--max-depth-value               Maximum function depth for compile time values definition           [ Default value: 16777216 ]








.                ╭─                                                                                                 │
.                │ ╭───────────────╮╮╮ ╭───────────────╮╮╮               ╭───────────────╮╮╮ ╭───────────────╮╮╮    │    High level languages - Photon Engine
.                │ │  Engine .ubr  │││ │  Source .ubr  │││               │  Source .lux  │││ │  Engine .lux  │││    │
.                │ ╰───────┬───────╯╯╯ ╰──────┬─┬──────╯╯╯               ╰─────┬─┬─┬─────╯╯╯ ╰──────┬─┬──────╯╯╯    │
.                │         │                  │ ╰──────────────╮ ╭─────────────╯ │ │                │ │             │
.                │         │                  ├────────────────│─│───────────────╯ │                │ │             │
.                │         ├──────────────────│────────────────│─│─────────────────│────────────────╯ │             │
.                │      pc │               pc ╰╮               │ │            pc ╭─╯              pc ╭╯             │
.                │ ╭───────┴───────╮╮╮ ╭───────┴───────╮╮╮     │ │       ╭───────┴───────╮╮╮ ╭───────┴───────╮╮╮    │    Precompiled binaries
.                │ │ Engine .pcubr │││ │ Source .pcubr │││     │ │       │ Source .pclux │││ │ Engine .pclux │││    │
.                │ ╰───────┬───────╯╯╯ ╰───────┬───────╯╯╯     │ │       ╰──────┬─┬──────╯╯╯ ╰───────┬───────╯╯╯    │
.                │         ╰───────────────────┼───────────────┴─┴──────────────┴─│──────────────────╯              │
.   COMPILE TIME │                          pc │                              pc ╭╯                                 │
.                │                     ╭───────┴───────╮                 ╭───────┴───────╮╮╮                        │    Individual source file containing all the code
.                │                     │     .ubr      │                 │     .lux      │││                        │    One per module
.                │                     ╰───────┬───────╯                 ╰───────┬───────╯╯╯                        │
.                │     ╭───────────────────────┴─────────────────────────────────┴───────────────────────╮          │
.                │  pc │                                                                              pc │          │
.                │ ╭───┴───╮ ╭─────────────╮╮╮ ╭─────────────╮╮╮ ╭─────────────╮╮╮ ╭─────────────╮╮╮ ╭───┴───╮╮╮    │    Output languages
.                │ │ .cpp  │ │ Engine .hpp │││ │ Vulkan .hpp │││ │   C++ .hpp  │││ │ Engine .cpp │││ │ .comp │││    │    Inline GLSL and inline C++ blocks are pasted
.                │ ╰───┬───╯ ╰─────┬─┬─────╯╯╯ ╰─────┬─┬─────╯╯╯ ╰─────┬─┬─────╯╯╯ ╰──────┬──────╯╯╯ ╰───┬───╯╯╯    │
.                │     │           │ ╰───────────────│─┴───────────────│─┴────────────────┤ g++          │          │
.                │     ├───────────┴─────────────────┴─────────────────╯           ╭──────┴──────╮╮╮     │          │
.                │     │                                                           │  Engine .o  │││     │          │
.                │     │                                                           ╰──────┬──────╯╯╯     │          │
.                ╰─    ╰──┬───────────────────────────────────────────────────────────────╯              │          │
.                ╭─   g++ │                                                             glslangValidator │          │
.                │ ╭──────┴──────╮ ╭───────────────╮                               ╭───────────────╮ ╭───┴───╮╮╮    │    Output binaries
.                │ │     BIN     │ │    libc++     │                               │ Vulkan driver │ │ SPIRV │││    │    Used in runtime
.                │ ╰──────┬──────╯ ╰───────┬───────╯                               ╰───────┬───────╯ ╰───┬───╯╯╯    │
.                │        ╰────────────────┴─────────────────────┬─────────────────────────┴─────────────╯          │
.                │                                               │                                                  │
.                │                                               │                                                  │
.       RUNTIME  │                                               │                                                  │
.                │ ╭─────────────────────────────────────────────┴─────────────────────────────────────────────╮    │
.                │ │                                                                                           │    │
.                │ │                                        APPLICATION                                        │    │
.                │ │                                                                                           │    │
.                │ ╰───────────────────────────────────────────────────────────────────────────────────────────╯    │
.                ╰─                                                                                                 │









.       │   ╭───────────────────╮             ╭───────────────────╮╮╮   │   Abstract representation of the syntactic elements
. -oy   │   │   Syntactic tree  │             │   Syntactic tree  │││   │
.       │   ╰───────────────────╯             ╰───────────────────╯╯╯   │
.       │          pc │                              pc │               │
.       │   ╭───────────────────╮             ╭───────────────────╮╮╮   │   Abstract representation of the program logic
. -oe   │   │   Semantic tree   │             │   Semantic tree   │││   │
.       │   ╰───────────────────╯             ╰───────────────────╯╯╯   │
.       │          pc │                              pc │               │
.       │   ╭───────────────────╮             ╭───────────────────╮╮╮   │   Removes templates, namespaces, tuples, typeof, baseof, aliases
. -o1   │   │      Layer 1      │             │      Layer 1      │││   │   Translates the names of symbols
.       │   ╰───────────────────╯             ╰───────────────────╯╯╯   │
.       │          pc │                              pc │               │
.       │   ╭───────────────────╮             ╭───────────────────╮╮╮   │   Removes typenames, enums, =:, !:, for loops, once, then, while-else, match
. -o0   │   │      Layer 0      │             │      Layer 0      │││   │
.       │   ╰───────────────────╯             ╰───────────────────╯╯╯   │



Preprocessing
    Conditionals evaluation
    File inclusion      +
    Macro expansion

Compilation
    Tokenization
    Syntax analysis
        Syntax tree creation
        Syntax errors output
    Semantic analysis
        Template instantiation
        Symbol tables creation
        Final symbol names assignment
        Symbol indexing
        Semantic tree creation
        Semantic errors output

    Const evaluation
        Code unwrapping
        Constness errors output
        Const optimizaion

    Static analysis
        Logical errors output

    Optimizations
        TODO

    Translation
        GLSL/C++ output
        SPIRV/binary output

    Language-specific optimizations
        TODO












*already declared* and *name conflict* are different